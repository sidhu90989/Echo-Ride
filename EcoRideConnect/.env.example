# RideConnect Environment Variables - Google Cloud Only Configuration

# =============================================================================
# üî¥ GOOGLE CLOUD PROJECT (Required)
# =============================================================================

# Google Cloud Project Configuration
GOOGLE_CLOUD_PROJECT="trusty-diorama-475905-c3"
GOOGLE_APPLICATION_CREDENTIALS="./path/to/service-account-key.json"

# =============================================================================
# üó∫Ô∏è GOOGLE MAPS APIS (Required for maps and routing)
# =============================================================================

# Google Maps API (Enable: Maps JavaScript API, Places API, Directions API, Geocoding API, Distance Matrix API)
# Get from: https://console.cloud.google.com/apis/credentials
GOOGLE_MAPS_API_KEY="AIzaSyAyoxCh_tJzFHwMNSX1Zs6Ez1EmYMxxUPg"
VITE_GOOGLE_MAPS_API_KEY="AIzaSyAyoxCh_tJzFHwMNSX1Zs6Ez1EmYMxxUPg"

# =============================================================================
# üî• FIREBASE AUTHENTICATION (Required)
# =============================================================================

# Firebase Authentication (Part of Google Cloud)
# Get from: https://console.firebase.google.com/
VITE_FIREBASE_API_KEY="AIzaSyAyoxCh_tJzFHwMNSX1Zs6Ez1EmYMxxUPg"
VITE_FIREBASE_AUTH_DOMAIN="trusty-diorama-475905-c3.firebaseapp.com"
VITE_FIREBASE_PROJECT_ID="trusty-diorama-475905-c3"
VITE_FIREBASE_APP_ID="1:805719737795:web:fdf6eb93864fcde7b8a976"
FIREBASE_PROJECT_ID="trusty-diorama-475905-c3"

# =============================================================================
# üóÑÔ∏è GOOGLE CLOUD SQL (PostgreSQL) - Optional
# =============================================================================

# Cloud SQL Configuration (Use Cloud SQL Proxy for local development)
CLOUD_SQL_HOST="127.0.0.1"
CLOUD_SQL_PORT="5432"
# Recommended example Cloud SQL values (update for your environment)
CLOUD_SQL_USER="rideconnect-user"
CLOUD_SQL_PASSWORD="your-secure-password"
CLOUD_SQL_DATABASE="rideconnect"
CLOUD_SQL_CONNECTION_NAME="trusty-diorama-475905-c3:us-central1:rideconnect-db"

# =============================================================================
# üî¥ GOOGLE CLOUD MEMORYSTORE (Redis) - Optional
# =============================================================================

# Memorystore (Redis) Configuration
REDIS_HOST="127.0.0.1"
REDIS_PORT="6379"
REDIS_PASSWORD=""

# =============================================================================
# üì® GOOGLE CLOUD PUB/SUB (Message Queue)
# =============================================================================

# Pub/Sub Topics
PUBSUB_LOCATION_TOPIC="driver-locations"
PUBSUB_RIDE_REQUESTS_TOPIC="ride-requests"
PUBSUB_RIDE_UPDATES_TOPIC="ride-updates"

# =============================================================================
# ü§ñ GOOGLE CLOUD VERTEX AI (Machine Learning) - Optional
# =============================================================================

# Vertex AI Configuration (for ML-based driver matching)
VERTEX_AI_ENDPOINT=""
VERTEX_AI_LOCATION="us-central1"

# =============================================================================
# üìä GOOGLE BIGQUERY (Analytics) - Optional
# =============================================================================

# BigQuery Configuration
BIGQUERY_DATASET="rideconnect_analytics"
BIGQUERY_LOCATION="US"

# =============================================================================
# üåê APPLICATION CONFIGURATION
# =============================================================================

# Server Configuration
NODE_ENV="development"
PORT="5000"
VITE_API_BASE_URL="http://localhost:5000/api"
VITE_SOCKET_SERVER="http://localhost:5000"

# Authentication Mode
SIMPLE_AUTH="true"
ALLOW_SIMPLE_AUTH_ROUTES="true"

# =============================================================================
# ‚ùå REMOVED EXTERNAL SERVICES (Google Cloud Only)
# =============================================================================

# The following services have been removed in favor of Google Cloud:
# ‚ùå Stripe (replaced with Google Pay API)
# ‚ùå External payment gateways
# ‚ùå External monitoring services
# ‚ùå Third-party analytics

# =============================================================================
# üìù OPTIONAL: Legacy Database (if migrating)
# =============================================================================

# Legacy Neon/Supabase Database (Optional - only if migrating from existing DB)
DATABASE_URL=""
VITE_STRIPE_PUBLISHABLE_KEY="pk_test_your_stripe_publishable_key"

# =============================================================================
# üü° IMPORTANT APIs (Enhanced Functionality)
# =============================================================================

# Twilio SMS/Communication (IMPORTANT for notifications)
# Get from: https://console.twilio.com/
TWILIO_ACCOUNT_SID="your-twilio-account-sid"
TWILIO_AUTH_TOKEN="your-twilio-auth-token"
TWILIO_PHONE_NUMBER="your-twilio-phone-number"

# Email Service (IMPORTANT for receipts and notifications)
# Option 1: SendGrid (Recommended)
SENDGRID_API_KEY="your-sendgrid-api-key"
# Option 2: Mailgun
MAILGUN_API_KEY="your-mailgun-api-key"
MAILGUN_DOMAIN="your-mailgun-domain"

# =============================================================================
# üü¢ OPTIONAL APIs (Nice-to-Have Features)
# =============================================================================

# Weather API (OPTIONAL - for weather-based features)
# Get from: https://openweathermap.org/api
OPENWEATHER_API_KEY="your-openweather-api-key"

# Emissions API (OPTIONAL - for emissions calculations)
# Get from: https://climatiq.io/
CLIMATIQ_API_KEY="your-climatiq-api-key"

# Analytics (OPTIONAL - for user tracking)
GOOGLE_ANALYTICS_ID="your-google-analytics-tracking-id"

# Error Tracking (OPTIONAL - for production monitoring)
# Get from: https://sentry.io/
SENTRY_DSN="your-sentry-dsn"

# =============================================================================
# ‚öôÔ∏è Development Configuration
# =============================================================================

# Development Mode (for local development without external services)
# Set to "true" to use in-memory storage and mock services
SIMPLE_AUTH=false
VITE_SIMPLE_AUTH=false

# Server Configuration
PORT=5000
NODE_ENV=development
SESSION_SECRET="your-session-secret-change-in-production"

# Socket.IO Server for Real-time Features
VITE_SOCKET_SERVER=http://localhost:5000

# Backend API Base URL
VITE_API_BASE_URL=http://localhost:5000/api

# Frontend/Backend cross-origin configuration
# When hosting frontend separately (e.g., Vercel) and backend on Render,
# set VITE_API_URL in the frontend environment to the backend base URL.
# Optionally set FRONTEND_ORIGIN on the server to allow CORS from your frontend.
VITE_API_URL="https://rideconnect-backend.example.com"
FRONTEND_ORIGIN="https://rideconnect.example.com"

# -----------------------------------------------------------------------------
# External Name API (Server-side only)
# Do NOT expose these in the client. Keep tokens on the server.
# If your provider requires IP allowlisting, add your deployment egress IPs
# (Codespaces/Vercel IPs differ from your local machine's IP).
NAME_API_BASE_URL_DEV="https://api.dev.name.com"
NAME_API_BASE_URL_PROD="https://api.name.com"
NAME_API_TOKEN_DEV=""
NAME_API_TOKEN_PROD=""

# Google Maps API (Required for maps functionality)
VITE_GOOGLE_MAPS_API_KEY="your-google-maps-api-key"

# Example database URLs for different providers:
# Neon (Recommended): postgresql://user:password@ep-name.region.aws.neon.tech/dbname?sslmode=require
# Supabase: postgresql://postgres:password@db.project.supabase.co:5432/postgres
# Railway: postgresql://postgres:password@containers-us-west-123.railway.app:5432/railway
# Local PostgreSQL: postgresql://postgres:password@localhost:5432/rideconnect

# Development Setup:
# 1. Copy this file to .env
# 2. Set SIMPLE_AUTH=true for local development without external services
# 3. Or set up a real database and configure DATABASE_URL
# 4. Add your Google Maps API key for map functionality
